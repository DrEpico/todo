(()=>{"use strict";var e={208:(e,t,n)=>{n.d(t,{A:()=>p});var o=n(354),r=n.n(o),a=n(314),i=n.n(a),A=n(417),c=n.n(A),l=new URL(n(31),n.b),s=i()(r()),d=c()(l);s.push([e.id,`:root {\n    --text-50: hsl(37, 31%, 95%);\n    --text-100: hsl(35, 33%, 90%);\n    --text-200: hsl(35, 33%, 80%);\n    --text-300: hsl(36, 33%, 70%);\n    --text-400: hsl(36, 33%, 60%);\n    --text-500: hsl(36, 33%, 50%);\n    --text-600: hsl(36, 33%, 40%);\n    --text-700: hsl(36, 33%, 30%);\n    --text-800: hsl(35, 33%, 20%);\n    --text-900: hsl(35, 33%, 10%);\n    --text-950: hsl(38, 31%, 5%);\n\n    --background-50: hsl(37, 52%, 95%);\n    --background-100: hsl(36, 49%, 90%);\n    --background-200: hsl(35, 50%, 80%);\n    --background-300: hsl(36, 50%, 70%);\n    --background-400: hsl(36, 50%, 60%);\n    --background-500: hsl(36, 50%, 50%);\n    --background-600: hsl(36, 50%, 40%);\n    --background-700: hsl(36, 50%, 30%);\n    --background-800: hsl(36, 51%, 20%);\n    --background-900: hsl(36, 49%, 10%);\n    --background-950: hsl(37, 52%, 5%);\n\n    --primary-50: hsl(39, 54%, 95%);\n    --primary-100: hsl(38, 53%, 90%);\n    --primary-200: hsl(36, 55%, 80%);\n    --primary-300: hsl(37, 54%, 70%);\n    --primary-400: hsl(37, 54%, 60%);\n    --primary-500: hsl(37, 54%, 50%);\n    --primary-600: hsl(37, 54%, 40%);\n    --primary-700: hsl(37, 54%, 30%);\n    --primary-800: hsl(36, 55%, 20%);\n    --primary-900: hsl(38, 53%, 10%);\n    --primary-950: hsl(34, 54%, 5%);\n\n    --secondary-50: hsl(38, 62%, 95%);\n    --secondary-100: hsl(37, 61%, 90%);\n    --secondary-200: hsl(37, 63%, 80%);\n    --secondary-300: hsl(37, 62%, 70%);\n    --secondary-400: hsl(37, 62%, 60%);\n    --secondary-500: hsl(37, 62%, 50%);\n    --secondary-600: hsl(37, 62%, 40%);\n    --secondary-700: hsl(37, 62%, 30%);\n    --secondary-800: hsl(37, 63%, 20%);\n    --secondary-900: hsl(37, 61%, 10%);\n    --secondary-950: hsl(38, 62%, 5%);\n\n    --accent-50: hsl(37, 69%, 95%);\n    --accent-100: hsl(37, 73%, 90%);\n    --accent-200: hsl(37, 71%, 80%);\n    --accent-300: hsl(37, 71%, 70%);\n    --accent-400: hsl(37, 71%, 60%);\n    --accent-500: hsl(37, 71%, 50%);\n    --accent-600: hsl(37, 71%, 40%);\n    --accent-700: hsl(37, 71%, 30%);\n    --accent-800: hsl(37, 71%, 20%);\n    --accent-900: hsl(37, 73%, 10%);\n    --accent-950: hsl(37, 69%, 5%);\n\n    --static: rgba(225, 225, 225, 0.5);\n    --static2: #0f0f0f;\n    --static3: rgb(255, 255, 255);\n    --static4: rgba(225, 225, 225, 0.2);\n    --static5: rgb(24, 172, 122);\n    --static6: rgba(0, 0, 0, 0.05);\n    --static7: rgba(0, 0, 0, 0.1);\n    --static8: rgba(0, 0, 0, 0.05);\n    --static9: rgba(0, 0, 0, 0.3);\n    --static10: rgba(225, 225, 225);\n    --static11: rgba(0, 0, 0, 0.03);\n    --static12: rgba(255, 255, 255, 0.8);\n    --static13: rgb(235, 235, 235);\n    --static14: rgba(0, 0, 0, 0.2);\n    --static15: rgba(255, 255, 255, 0.5);\n} \n\nbody{\n    background-color: var(--background-50);\n    font-family: Poppins;\n    margin: 0px;\n\n    display: grid;\n    grid-template-columns: max-content 1fr; \n    grid-template-rows: 2em 48px 1fr;\n    grid-template-areas: \n        "header header header header"\n        "header header header header"\n        "sidebar content content content"\n        "sidebar content content content";\n}\n\n#sidebar {\n    grid-area: sidebar;\n    min-width: 250px;\n    background-color: var(--static11);\n    padding: 0 0 35px;\n    height: 100vh;\n    margin-right: 10px;\n    min-width: max-content;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n#activeTab {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: var(--secondary-100);\n    opacity: 100%;\n    text-align: center; /* Horizontally center the button */\n}\n\n/* project tab element */\n.project {\n    /* display: block; */\n    font-size: 16px;\n    padding: 10px 0px 10px 35px;\n    cursor: pointer;\n    transition: background-color 0.3s ease; /* nice little detail */\n    opacity: 60%;\n}\n\n.project:hover {\n    background-color: var(--text-100);\n    opacity: 100%;\n}\n\n.content {\n    grid-area: content;\n    display: flex;\n    flex-wrap: wrap;\n}\n\n#title {\n    margin-top: 20px;\n    margin-left: 35px;\n    margin: 20px 35px 20px 35px;\n}\n\n#header {\n    grid-area: header;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin-right: 30px;\n    /* position: fixed;\n    top: 0;\n    width: 100% */\n}\n\nselect {\n    font-family: Poppins;\n    font-size: 0.9em;\n    margin-bottom: 15px;\n}\n\nselect#sort {\n    margin: 0px;\n}\n\n/* todo element */\n.box {\n    background-color: var(--background-100);\n    width: 350px;\n    height: 300px;\n    margin: 10px;\n    padding: 20px;\n    /* padding-top: 30px; */\n    position: relative; /* Ensure the plus sign is positioned relative to the .box element */\n    margin-bottom: 20px; /* Adjust as needed */\n    box-sizing: border-box;\n    min-width: 350px;\n    border-radius: 20px;\n    transition: background-color 0.3s ease;\n}\n\n.box.clickable:hover {\n    background-color: var(--quaternary-color); /* Change background color with opacity */\n}\n\n.plus-sign {\n    /*Position the plus sign relative to the .box element*/\n    position: absolute; \n    /*Center vertically */\n    top: 0px;\n    /*Center horizontally */\n    left: 0px;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 90px;   \n    line-height: 300px;\n    width: 350px;\n    height: 300px;\n    /* transform: translate(-50%, -50%); Center the plus sign precisely */\n    font-size: 24px; /* Adjust the size of the plus sign */\n    color: var(--secondary-color); /* Set the color of the plus sign */\n    cursor: pointer; /* Change cursor to indicate it's clickable */\n    /* padding: 70px 200px; */\n}\n\ninput {\n    background-color: rgba(0, 0, 0, 0);\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    margin-bottom: 15px;\n}\n\ninput#planned, input#due {\n    margin-bottom: 19px;\n}\n\ninput:focus {\n    outline: none;\n    border: none;\n}\n\n#priority {\n    background-color: var(--primary-color);\n    border-radius: 0%;\n}\n\n#sort {\n    background-color: var(--primary-color);\n    margin-bottom: 19px;\n    border-radius: 0%;\n}\n\nbutton {\n    margin-top: 9px;\n    background-color: rgba(0, 0, 0, 0);\n    border-color: var(--secondary-color);\n    border-radius: 3px;\n}\n\nbutton:focus {\n    background-color: var(--primary-color);\n    border-color: var(--secondary-color);\n}\n\n/* Target the date picker icon specifically */\ninput[type="date"]::-webkit-calendar-picker-indicator {\n    background-color: var(--secondary-color); /* Set the background color of the date picker icon to transparent */\n    /* You can also set other properties like width, height, etc. to customize the appearance of the icon */\n}\n\n.deleteBtn {\n    position: absolute;\n    bottom: 25px;\n    right: 35px;\n}\n\ninput.projName {\n    margin: 0px;\n}\n\nbutton.addBtn { \n    margin: 0px;\n}\n\n#deleteBtn {\n    margin: 0px;\n    background: url(${d}) no-repeat center center;\n    background-size: contain; /* Ensure the image scales appropriately */\n    width: 23.636px; /* Set the desired width */\n    height: 23.636px; /* Set the desired height */\n    border-width: 2px;\n    border-style: solid;\n    border-color: var(--primary-color);\n    border-radius: 15%;\n    margin-right: 13px;\n    opacity: 60%;\n}\n\n#palletBtn {\n    /* position: fixed; */\n    /* bottom: 20px; \n    right: 20px;  */\n    margin-top: 0px;\n    margin-left: 15px; /*temp*/\n    background-color: #F38181; /* Example background color */\n    color: white; /* Example text color */\n    border: none; /* Remove default border */\n    padding: 5px 10px; /* Example padding */\n    cursor: pointer; /* Pointer cursor on hover */\n    border-radius: 5px; /* Rounded corners */\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n}\n\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[':root {\n    --text-50: hsl(37, 31%, 95%);\n    --text-100: hsl(35, 33%, 90%);\n    --text-200: hsl(35, 33%, 80%);\n    --text-300: hsl(36, 33%, 70%);\n    --text-400: hsl(36, 33%, 60%);\n    --text-500: hsl(36, 33%, 50%);\n    --text-600: hsl(36, 33%, 40%);\n    --text-700: hsl(36, 33%, 30%);\n    --text-800: hsl(35, 33%, 20%);\n    --text-900: hsl(35, 33%, 10%);\n    --text-950: hsl(38, 31%, 5%);\n\n    --background-50: hsl(37, 52%, 95%);\n    --background-100: hsl(36, 49%, 90%);\n    --background-200: hsl(35, 50%, 80%);\n    --background-300: hsl(36, 50%, 70%);\n    --background-400: hsl(36, 50%, 60%);\n    --background-500: hsl(36, 50%, 50%);\n    --background-600: hsl(36, 50%, 40%);\n    --background-700: hsl(36, 50%, 30%);\n    --background-800: hsl(36, 51%, 20%);\n    --background-900: hsl(36, 49%, 10%);\n    --background-950: hsl(37, 52%, 5%);\n\n    --primary-50: hsl(39, 54%, 95%);\n    --primary-100: hsl(38, 53%, 90%);\n    --primary-200: hsl(36, 55%, 80%);\n    --primary-300: hsl(37, 54%, 70%);\n    --primary-400: hsl(37, 54%, 60%);\n    --primary-500: hsl(37, 54%, 50%);\n    --primary-600: hsl(37, 54%, 40%);\n    --primary-700: hsl(37, 54%, 30%);\n    --primary-800: hsl(36, 55%, 20%);\n    --primary-900: hsl(38, 53%, 10%);\n    --primary-950: hsl(34, 54%, 5%);\n\n    --secondary-50: hsl(38, 62%, 95%);\n    --secondary-100: hsl(37, 61%, 90%);\n    --secondary-200: hsl(37, 63%, 80%);\n    --secondary-300: hsl(37, 62%, 70%);\n    --secondary-400: hsl(37, 62%, 60%);\n    --secondary-500: hsl(37, 62%, 50%);\n    --secondary-600: hsl(37, 62%, 40%);\n    --secondary-700: hsl(37, 62%, 30%);\n    --secondary-800: hsl(37, 63%, 20%);\n    --secondary-900: hsl(37, 61%, 10%);\n    --secondary-950: hsl(38, 62%, 5%);\n\n    --accent-50: hsl(37, 69%, 95%);\n    --accent-100: hsl(37, 73%, 90%);\n    --accent-200: hsl(37, 71%, 80%);\n    --accent-300: hsl(37, 71%, 70%);\n    --accent-400: hsl(37, 71%, 60%);\n    --accent-500: hsl(37, 71%, 50%);\n    --accent-600: hsl(37, 71%, 40%);\n    --accent-700: hsl(37, 71%, 30%);\n    --accent-800: hsl(37, 71%, 20%);\n    --accent-900: hsl(37, 73%, 10%);\n    --accent-950: hsl(37, 69%, 5%);\n\n    --static: rgba(225, 225, 225, 0.5);\n    --static2: #0f0f0f;\n    --static3: rgb(255, 255, 255);\n    --static4: rgba(225, 225, 225, 0.2);\n    --static5: rgb(24, 172, 122);\n    --static6: rgba(0, 0, 0, 0.05);\n    --static7: rgba(0, 0, 0, 0.1);\n    --static8: rgba(0, 0, 0, 0.05);\n    --static9: rgba(0, 0, 0, 0.3);\n    --static10: rgba(225, 225, 225);\n    --static11: rgba(0, 0, 0, 0.03);\n    --static12: rgba(255, 255, 255, 0.8);\n    --static13: rgb(235, 235, 235);\n    --static14: rgba(0, 0, 0, 0.2);\n    --static15: rgba(255, 255, 255, 0.5);\n} \n\nbody{\n    background-color: var(--background-50);\n    font-family: Poppins;\n    margin: 0px;\n\n    display: grid;\n    grid-template-columns: max-content 1fr; \n    grid-template-rows: 2em 48px 1fr;\n    grid-template-areas: \n        "header header header header"\n        "header header header header"\n        "sidebar content content content"\n        "sidebar content content content";\n}\n\n#sidebar {\n    grid-area: sidebar;\n    min-width: 250px;\n    background-color: var(--static11);\n    padding: 0 0 35px;\n    height: 100vh;\n    margin-right: 10px;\n    min-width: max-content;\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n}\n\n#activeTab {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: var(--secondary-100);\n    opacity: 100%;\n    text-align: center; /* Horizontally center the button */\n}\n\n/* project tab element */\n.project {\n    /* display: block; */\n    font-size: 16px;\n    padding: 10px 0px 10px 35px;\n    cursor: pointer;\n    transition: background-color 0.3s ease; /* nice little detail */\n    opacity: 60%;\n}\n\n.project:hover {\n    background-color: var(--text-100);\n    opacity: 100%;\n}\n\n.content {\n    grid-area: content;\n    display: flex;\n    flex-wrap: wrap;\n}\n\n#title {\n    margin-top: 20px;\n    margin-left: 35px;\n    margin: 20px 35px 20px 35px;\n}\n\n#header {\n    grid-area: header;\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    margin-right: 30px;\n    /* position: fixed;\n    top: 0;\n    width: 100% */\n}\n\nselect {\n    font-family: Poppins;\n    font-size: 0.9em;\n    margin-bottom: 15px;\n}\n\nselect#sort {\n    margin: 0px;\n}\n\n/* todo element */\n.box {\n    background-color: var(--background-100);\n    width: 350px;\n    height: 300px;\n    margin: 10px;\n    padding: 20px;\n    /* padding-top: 30px; */\n    position: relative; /* Ensure the plus sign is positioned relative to the .box element */\n    margin-bottom: 20px; /* Adjust as needed */\n    box-sizing: border-box;\n    min-width: 350px;\n    border-radius: 20px;\n    transition: background-color 0.3s ease;\n}\n\n.box.clickable:hover {\n    background-color: var(--quaternary-color); /* Change background color with opacity */\n}\n\n.plus-sign {\n    /*Position the plus sign relative to the .box element*/\n    position: absolute; \n    /*Center vertically */\n    top: 0px;\n    /*Center horizontally */\n    left: 0px;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 90px;   \n    line-height: 300px;\n    width: 350px;\n    height: 300px;\n    /* transform: translate(-50%, -50%); Center the plus sign precisely */\n    font-size: 24px; /* Adjust the size of the plus sign */\n    color: var(--secondary-color); /* Set the color of the plus sign */\n    cursor: pointer; /* Change cursor to indicate it\'s clickable */\n    /* padding: 70px 200px; */\n}\n\ninput {\n    background-color: rgba(0, 0, 0, 0);\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    margin-bottom: 15px;\n}\n\ninput#planned, input#due {\n    margin-bottom: 19px;\n}\n\ninput:focus {\n    outline: none;\n    border: none;\n}\n\n#priority {\n    background-color: var(--primary-color);\n    border-radius: 0%;\n}\n\n#sort {\n    background-color: var(--primary-color);\n    margin-bottom: 19px;\n    border-radius: 0%;\n}\n\nbutton {\n    margin-top: 9px;\n    background-color: rgba(0, 0, 0, 0);\n    border-color: var(--secondary-color);\n    border-radius: 3px;\n}\n\nbutton:focus {\n    background-color: var(--primary-color);\n    border-color: var(--secondary-color);\n}\n\n/* Target the date picker icon specifically */\ninput[type="date"]::-webkit-calendar-picker-indicator {\n    background-color: var(--secondary-color); /* Set the background color of the date picker icon to transparent */\n    /* You can also set other properties like width, height, etc. to customize the appearance of the icon */\n}\n\n.deleteBtn {\n    position: absolute;\n    bottom: 25px;\n    right: 35px;\n}\n\ninput.projName {\n    margin: 0px;\n}\n\nbutton.addBtn { \n    margin: 0px;\n}\n\n#deleteBtn {\n    margin: 0px;\n    background: url(\'./images/deleteButton.png\') no-repeat center center;\n    background-size: contain; /* Ensure the image scales appropriately */\n    width: 23.636px; /* Set the desired width */\n    height: 23.636px; /* Set the desired height */\n    border-width: 2px;\n    border-style: solid;\n    border-color: var(--primary-color);\n    border-radius: 15%;\n    margin-right: 13px;\n    opacity: 60%;\n}\n\n#palletBtn {\n    /* position: fixed; */\n    /* bottom: 20px; \n    right: 20px;  */\n    margin-top: 0px;\n    margin-left: 15px; /*temp*/\n    background-color: #F38181; /* Example background color */\n    color: white; /* Example text color */\n    border: none; /* Remove default border */\n    padding: 5px 10px; /* Example padding */\n    cursor: pointer; /* Pointer cursor on hover */\n    border-radius: 5px; /* Rounded corners */\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);\n}\n\n'],sourceRoot:""}]);const p=s},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(i[c]=!0)}for(var l=0;l<e.length;l++){var s=[].concat(e[l]);o&&i[s[0]]||(void 0!==a&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=a),n&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=n):s[2]=n),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),t.push(s))}},t}},417:e=>{e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),t.hash&&(e+=t.hash),/["'() \t\n]|(%20)/.test(e)||t.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var a={},i=[],A=0;A<e.length;A++){var c=e[A],l=o.base?c[0]+o.base:c[0],s=a[l]||0,d="".concat(l," ").concat(s);a[l]=s+1;var p=n(d),C={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)t[p].references++,t[p].updater(C);else{var u=r(C,o);o.byIndex=A,t.splice(A,0,{identifier:d,updater:u,references:1})}i.push(d)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var A=n(a[i]);t[A].references--}for(var c=o(e,r),l=0;l<a.length;l++){var s=n(a[l]);0===t[s].references&&(t[s].updater(),t.splice(s,1))}a=c}}},659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},31:(e,t,n)=>{e.exports=n.p+"458b7e3d2fd90475111f.png"}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var a=t[o]={id:o,exports:{}};return e[o](a,a.exports,n),a.exports}n.m=e,n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var o=t.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!e||!/^http(s?):/.test(e));)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,n.nc=void 0,(()=>{var e=n(72),t=n.n(e),o=n(825),r=n.n(o),a=n(659),i=n.n(a),A=n(56),c=n.n(A),l=n(540),s=n.n(l),d=n(113),p=n.n(d),C=n(208),u={};function h(e,t=[]){this.title=e,this.todos=t}u.styleTagTransform=p(),u.setAttributes=c(),u.insert=i().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=s(),t()(C.A,u),C.A&&C.A.locals&&C.A.locals;const m=[];function g(e){return m.find((t=>t.title===e))}function b(e,t,n,o,r){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.checklist=r}function B(e){console.log("handleSortChange called");const t=e.target.value;"date"===t?function(){console.log("sortByDate called");let e=g(document.querySelector("#activeTab").textContent);e&&(console.log("project exists"),e.todos.sort(((e,t)=>new Date(e.dueDate)-new Date(t.dueDate))),D(e))}():"priority"===t&&function(){console.log("sortByPriority called");let e=g(document.querySelector("#activeTab").textContent);e&&(console.log("project exists"),e.todos.sort(((e,t)=>x(t.priority)-x(e.priority))),D(e))}()}function x(e){switch(console.log("priorityValue called"),e){case"low":return 1;case"medium":return 2;case"high":return 3;default:return 0}}const f=document.querySelector("body"),I=document.createElement("div");function y(){const e=document.createElement("div");e.classList.add("box"),e.textContent="Click me to add todo";const t=document.createElement("div");return t.textContent="+",t.classList.add("plus-sign"),e.appendChild(t),{box:e,plusSign:t}}function k(e){e.textContent="",e.classList.remove("clickable"),function(e){let t=document.createElement("form"),n=document.createElement("label");n.setAttribute("for","title"),n.textContent="Todo:         ";let o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("id","title"),o.setAttribute("name","title"),o.setAttribute("required","");let r=document.createElement("label");r.setAttribute("for","description"),r.textContent="Description:    ";let a=document.createElement("input");a.setAttribute("type","text"),a.setAttribute("id","description"),a.setAttribute("name","description");let i=document.createElement("label");i.setAttribute("for","dueDate"),i.textContent="Due:        ";let A=document.createElement("input");A.setAttribute("type","date"),A.setAttribute("id","dueDate"),A.setAttribute("name","dueDate");let c=document.createElement("label");c.setAttribute("for","priority"),c.textContent="Priority: ";let l=document.createElement("select");l.setAttribute("id","priority"),l.setAttribute("name","priority");["Low","Medium","High"].forEach((e=>{let t=document.createElement("option");t.value=e.toLowerCase(),t.textContent=e,l.appendChild(t)}));let s=document.createElement("label");s.textContent="Status: ";let d=document.createElement("input");d.setAttribute("type","radio"),d.setAttribute("id","planned"),d.setAttribute("name","status"),d.setAttribute("value","planned");let p=document.createElement("label");p.setAttribute("for","planned"),p.textContent="Planned";let C=document.createElement("input");C.setAttribute("type","radio"),C.setAttribute("id","due"),C.setAttribute("name","status"),C.setAttribute("value","due");let u=document.createElement("label");u.setAttribute("for","due"),u.textContent="Due";let h=document.createElement("button");h.setAttribute("id","createBtn"),h.textContent="Create",h.setAttribute("type","submit"),h.addEventListener("click",(function(n){if(n.preventDefault(),""===o.value.trim())return void alert("Title is required!");const r=new b(o.value,a.value,A.value,l.value,d.checked?d.value:C.value);console.log(r),v(),t.remove();let i=document.querySelector("#activeTab").textContent;console.log(i);let c=g(i);console.log(c),E(e,r,c),function(e,t){const n=m.findIndex((e=>e.title===t));-1!==n?(m[n].todos.push(e),console.log("Todo pushed to project:",t)):console.log("Project not found:",t)}(r,i)})),t.appendChild(n),t.appendChild(o),t.appendChild(document.createElement("br")),t.appendChild(r),t.appendChild(a),t.appendChild(document.createElement("br")),t.appendChild(c),t.appendChild(l),t.appendChild(document.createElement("br")),t.appendChild(s),t.appendChild(d),t.appendChild(p),t.appendChild(C),t.appendChild(u),t.appendChild(document.createElement("br")),t.appendChild(i),t.appendChild(A),t.appendChild(document.createElement("br")),t.appendChild(h),e.appendChild(t)}(e)}function E(e,t,n){const o=document.createElement("h2");o.textContent=t.title;const r=document.createElement("p");r.textContent=`Description: ${t.description}`;const a=document.createElement("p");a.textContent=`Due Date: ${t.dueDate}`;const i=document.createElement("p");i.textContent=`Priority: ${t.priority}`;const A=document.createElement("p");"planned"===t.checklist?A.textContent="Status: Planned":"due"===t.checklist?A.textContent="Status: Due":A.textContent="Status: error";let c=document.createElement("button");c.setAttribute("class","deleteBtn"),c.textContent="Done",c.addEventListener("click",(function(){!function(e,t,n){console.log(typeof n),console.log("project:"+n);let o=n.todos.indexOf(e);-1!==o?n.todos.splice(o,1):console.log("Error while splicing todos array"),t.remove()}(t,e,n)})),e.appendChild(c),e.appendChild(o),e.appendChild(r),e.appendChild(i),e.appendChild(A),e.appendChild(a)}function v(){const{box:e,plusSign:t}=y();return e.classList.add("clickable"),t.addEventListener("click",(function(){k(e)})),I.appendChild(e),e}function w(){let e=document.getElementById("activeTab");if(e){e.removeAttribute("id");let t=document.querySelector("#deleteBtn");t&&t.remove()}}function j(e){e.setAttribute("id","activeTab");let t=document.createElement("button");t.setAttribute("id","deleteBtn"),function(e,t){e.addEventListener("click",(function(e){e.stopPropagation();let n=t.textContent.trim();confirm(`Are you sure you want to delete the project "${n}"?`)&&function(e,t){let n=g(e),o=m.indexOf(n);-1!==o?m.splice(o,1):console.log("Error while splicing todos array"),t.remove()}(n,t)}))}(t,e),e.appendChild(t)}function D(e){S(),e.title;let t=e.todos;for(let n of t){let t=v();t.textContent="",t.classList.remove("clickable"),E(t,n,e)}v(),console.log(t)}function S(){for(;I.firstChild;)I.removeChild(I.firstChild)}let P=["#222831","#393E46","#00ADB5","#EEEEEE"];function T(e,t){document.querySelector(":root").style.setProperty(e,t)}function q(){T("--primary-color",`${P[3]}`),T("--secondary-color",`${P[2]}`),T("--tertiary-color",`${P[1]}`),T("--quaternary-color",`${P[0]}`)}(()=>{console.log("Called LoadBlankProject - Creating a blank project array...");let e=[];console.log("Pushing the title name of the project to the project array...");e.push({projectTitle:"Default Project"}),console.log(e)})(),function(){let e=document.createElement("div");e.setAttribute("id","header");let t=document.createElement("div");t.setAttribute("id","sortByDiv");let n=document.createElement("label");n.setAttribute("for","sort"),n.textContent="Sort by: ";let o=document.createElement("select");o.setAttribute("id","sort"),o.setAttribute("name","sort"),["Priority","Date"].forEach((e=>{let t=document.createElement("option");t.value=e.toLowerCase(),t.textContent=e,o.appendChild(t)})),o.addEventListener("change",B),t.appendChild(n),t.appendChild(o),e.appendChild(t),f.appendChild(e);let r=document.createElement("button");r.textContent="Change colour pallet",r.setAttribute("id","palletBtn"),r.addEventListener("click",q),e.appendChild(r)}(),function(){let e=document.createElement("div");e.setAttribute("id","sidebar"),f.appendChild(e);let t=document.createElement("h1");t.setAttribute("id","title"),e.appendChild(t),t.textContent="Todo list app";let n=document.createElement("span");n.setAttribute("class","project"),n.setAttribute("id","activeTab"),n.textContent="Daily",e.appendChild(n);let o=document.createElement("span");o.setAttribute("class","project"),o.textContent="New project",e.appendChild(o),document.getElementById("sidebar").addEventListener("click",(function(e){let t=e.target;if(t.classList.contains("project")){let e=t.textContent.trim();if("New project"===e)console.log(e),function(e){let t=e;t.textContent="";let n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("class","projName"),n.setAttribute("name","projName"),n.setAttribute("required","");let o=document.createElement("button");o.textContent="Confirm",o.setAttribute("class","addBtn"),t.appendChild(n),t.appendChild(o),o.addEventListener("click",(function(e){e.stopPropagation();let o=n.value.trim();o?(S(),v(),w(),t.textContent=o,j(t),function(){let e=document.querySelector("#sidebar"),t=document.createElement("span");t.setAttribute("class","project"),t.textContent="New project",e.appendChild(t)}(),function(e){const t=new h(e);m.push(t),console.log("New project created:",e)}(o)):alert("Project name cannot be empty.")}))}(t);else if(""===e);else if("Confirm"===e);else{console.log(e),w(),j(t);let n=g(e);n?(console.log(typeof n),console.log(n),function(e){e&&Array.isArray(e.todos)?(console.log("Project clicked:",e.title),e.todos.forEach((e=>{console.log("Title:",e.title),console.log("Description:",e.description),console.log("Due Date:",e.dueDate),console.log("Priority:",e.priority),console.log("Checklist:",e.checklist),console.log("------------------------------------------")}))):console.log("Invalid project or todos not found.")}(n),D(n)):console.log("Project not found")}}})),function(){let e=new h("Daily");m.push(e)}()}(),I.setAttribute("class","content"),f.appendChild(I),(()=>{const{box:e,plusSign:t}=y();e.classList.add("clickable"),t.addEventListener("click",(function(){k(e)})),I.appendChild(e)})(),console.log(undefined)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,