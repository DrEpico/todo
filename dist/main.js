(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>u});var o=t(354),r=t.n(o),A=t(314),i=t.n(A),a=t(417),c=t.n(a),l=new URL(t(31),t.b),s=new URL(t(637),t.b),d=i()(r()),p=c()(l),C=c()(s);d.push([n.id,`:root {\n    --text-50: hsl(37, 31%, 95%);\n    --text-100: hsl(35, 33%, 90%);\n    --text-200: hsl(35, 33%, 80%);\n    --text-300: hsl(36, 33%, 70%);\n    --text-400: hsl(36, 33%, 60%);\n    --text-500: hsl(36, 33%, 50%);\n    --text-600: hsl(36, 33%, 40%);\n    --text-700: hsl(36, 33%, 30%);\n    --text-800: hsl(35, 33%, 20%);\n    --text-900: hsl(35, 33%, 10%);\n    --text-950: hsl(38, 31%, 5%);\n\n    --background-50: hsl(37, 52%, 95%);\n    --background-100: hsl(36, 49%, 90%);\n    --background-200: hsl(35, 50%, 80%);\n    --background-300: hsl(36, 50%, 70%);\n    --background-400: hsl(36, 50%, 60%);\n    --background-500: hsl(36, 50%, 50%);\n    --background-600: hsl(36, 50%, 40%);\n    --background-700: hsl(36, 50%, 30%);\n    --background-800: hsl(36, 51%, 20%);\n    --background-900: hsl(36, 49%, 10%);\n    --background-950: hsl(37, 52%, 5%);\n\n    --primary-50: hsl(39, 54%, 95%);\n    --primary-100: hsl(38, 53%, 90%);\n    --primary-200: hsl(36, 55%, 80%);\n    --primary-300: hsl(37, 54%, 70%);\n    --primary-400: hsl(37, 54%, 60%);\n    --primary-500: hsl(37, 54%, 50%);\n    --primary-600: hsl(37, 54%, 40%);\n    --primary-700: hsl(37, 54%, 30%);\n    --primary-800: hsl(36, 55%, 20%);\n    --primary-900: hsl(38, 53%, 10%);\n    --primary-950: hsl(34, 54%, 5%);\n\n    --secondary-50: hsl(38, 62%, 95%);\n    --secondary-100: hsl(37, 61%, 90%);\n    --secondary-200: hsl(37, 63%, 80%);\n    --secondary-300: hsl(37, 62%, 70%);\n    --secondary-400: hsl(37, 62%, 60%);\n    --secondary-500: hsl(37, 62%, 50%);\n    --secondary-600: hsl(37, 62%, 40%);\n    --secondary-700: hsl(37, 62%, 30%);\n    --secondary-800: hsl(37, 63%, 20%);\n    --secondary-900: hsl(37, 61%, 10%);\n    --secondary-950: hsl(38, 62%, 5%);\n\n    --accent-50: hsl(37, 69%, 95%);\n    --accent-100: hsl(37, 73%, 90%);\n    --accent-200: hsl(37, 71%, 80%);\n    --accent-300: hsl(37, 71%, 70%);\n    --accent-400: hsl(37, 71%, 60%);\n    --accent-500: hsl(37, 71%, 50%);\n    --accent-600: hsl(37, 71%, 40%);\n    --accent-700: hsl(37, 71%, 30%);\n    --accent-800: hsl(37, 71%, 20%);\n    --accent-900: hsl(37, 73%, 10%);\n    --accent-950: hsl(37, 69%, 5%);\n\n    --static: rgba(225, 225, 225, 0.5);\n    --static2: #0f0f0f;\n    --static3: rgb(255, 255, 255);\n    --static4: rgba(225, 225, 225, 0.2);\n    --static5: rgb(24, 172, 122);\n    --static6: rgba(0, 0, 0, 0.05);\n    --static7: rgba(0, 0, 0, 0.1);\n    --static8: rgba(0, 0, 0, 0.05);\n    --static9: rgba(0, 0, 0, 0.3);\n    --static10: rgba(225, 225, 225);\n    --static11: rgba(0, 0, 0, 0.03);\n    --static12: rgba(255, 255, 255, 0.8);\n    --static13: rgb(235, 235, 235);\n    --static14: rgba(0, 0, 0, 0.2);\n    --static15: rgba(255, 255, 255, 0.5);\n\n    --margin-lg: 0 12%;\n} \n\nbody{\n    background-color: var(--background-50);\n    font-family: Poppins;\n    margin: 0px;\n    /* margin: var(--margin-lg); */\n    gap: 20px;\n\n    display: grid;\n    grid-template-columns: 300px 1fr; \n    grid-template-rows: 4em 1fr;\n    grid-template-areas: \n        "header header header header"\n        "sidebar content content content"\n        "sidebar content content content";\n}\n\n#header {\n    grid-area: header;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 50px;\n    padding-right: 50px;\n    border-bottom: 1px solid var(--static7);\n    height: 65px;\n    /* position: fixed; */\n    /*top: 0;*/\n    /* width: 100%; */\n}\n\nh1#title {\n    font-weight: 600;\n}\n\n#rightGap {\n    display: flex;\n    gap: 30px; /* Optional: Add gap between the elements */\n}\n\n#sidebar {\n    grid-area: sidebar;\n    background-color: var(--static11);\n    padding: 16px;\n    height: 85vh;\n    width: 300;\n    /* min-width: max-content; */\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    border-radius: 20px;\n    margin-left: 50px;\n}\n\n#activeTab {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: var(--secondary-100);\n    opacity: 100%;\n    text-align: center; /* Horizontally center the button */\n}\n\n#user {\n    font-size: 16px;\n    padding: 1em 2em;\n    cursor: pointer;\n    transition: background-color 0.3s ease; /* nice little detail */\n    opacity: 100%;\n    margin-bottom: 20px;\n    border-radius: 10px;\n}\n\n#user:hover {\n    background-color: var(--static11);\n}\n\n/* project tab element */\n.project {\n    /* display: block; */\n    font-size: 16px;\n    padding: 1em 0em 1em 2em;\n    cursor: pointer;\n    transition: background-color 0.3s ease; /* nice little detail */\n    opacity: 60%;\n    border-radius: 30px;\n}\n\n.project:hover {\n    background-color: var(--text-100);\n    opacity: 100%;\n}\n\n.content {\n    grid-area: content;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n}\n\nselect {\n    font-family: Poppins;\n    font-size: 0.9em;\n    margin-bottom: 14px;\n}\n\nselect#sort {\n    margin: 0px;\n}\n\n/* todo element */\n.box {\n    background-color: var(--secondary-100);\n    width: 350px;\n    height: 300px;\n    padding: 27px;\n    /* padding-top: 30px; */\n    position: relative; /* Ensure the plus sign is positioned relative to the .box element */\n    box-sizing: border-box;\n    min-width: 350px;\n    border-radius: 20px;\n    transition: background-color 0.3s ease;\n}\n\n.box.clickable:hover {\n    background-color: var(--secondary-200); /* Change background color with opacity */\n}\n\n.plus-sign {\n    /*Position the plus sign relative to the .box element*/\n    position: absolute; \n    /*Center vertically */\n    top: 0px;\n    /*Center horizontally */\n    left: 0px;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 90px;   \n    line-height: 300px;\n    width: 350px;\n    height: 300px;\n    /* transform: translate(-50%, -50%); Center the plus sign precisely */\n    font-size: 24px; /* Adjust the size of the plus sign */\n    color: var(--accent-700); /* Set the color of the plus sign */\n    cursor: pointer; /* Change cursor to indicate it's clickable */\n    /* padding: 70px 200px; */\n}\n\nform {\n    margin: 10px 0px 0px 10px;\n}\n\nh2 {\n    margin-top: 16px;\n    margin-bottom: 16px;\n}\n\ninput {\n    background-color: rgba(0, 0, 0, 0);\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    margin-bottom: 15px;\n    font-family: Poppins;\n}\n\ninput.projName {\n    width: 105px;\n}\n\ninput#planned, input#due {\n    margin-bottom: 19px;\n}\n\ninput#title, input#description {\n    width: 160px;\n}\n\ninput:focus {\n    outline: none;\n    border: none;\n}\n\ninput.project {\n    width: 20px;\n}\n\n#priority {\n    background-color: var(--primary-color);\n    border-radius: 10px;\n    border: 2px solid var(--static7);\n    padding-left: 4px;\n}\n\n#sortByDiv {\n    display: flex;\n}\n\n#sort {\n    margin-top: 0px;\n    border: none; /* Remove default border */\n    padding: 10px 10px; /* Example padding */\n    cursor: pointer; /* Pointer cursor on hover */\n    border-radius: 10px; /* Rounded corners */\n    border: 1px solid var(--static7);\n    background-color: rgba(0, 0, 0, 0);\n}\n\n#sort:focus {\n    border: 1px solid var(--static7);\n}\n\noption {\n    background-color: var(--background-50);\n    border: none;/*useless stuff lol*/\n    border-radius: 15px;\n    box-shadow: none;\n}\n\noption:focus {\n    background-color: #0f0f0f;\n    border-radius: 15px;\n    box-shadow: none;\n}\n\nbutton {\n    margin-top: 9px;\n    background-color: rgba(0, 0, 0, 0);\n    border-color: var(--secondary-color);\n    border-radius: 3px;\n}\n\nbutton:focus {\n    background-color: var(--primary-color);\n    border-color: var(--secondary-color);\n}\n\n/* Target the date picker icon specifically */\ninput[type="date"]::-webkit-calendar-picker-indicator {\n    background-color: var(--secondary-color); /* Set the background color of the date picker icon to transparent */\n    /* You can also set other properties like width, height, etc. to customize the appearance of the icon */\n\n}\n\n.deleteBtn {\n    position: absolute;\n    bottom: 25px;\n    right: 35px;\n}\n\ninput.projName {\n    margin: 0px;\n}\n\nbutton.addBtn { \n    margin: 0px;\n}\n\nbutton.addBtn, button#createBtn {\n    padding: 3.5px;\n}\n\n#deleteBtn {\n    margin: 0px;\n    background: url(${p}) no-repeat center center;\n    background-size: contain; /* Ensure the image scales appropriately */\n    width: 23.636px; /* Set the desired width */\n    height: 23.636px; /* Set the desired height */\n    border-width: 2px;\n    border-style: solid;\n    border-color: var(--primary-color);\n    border-radius: 15%;\n    margin-right: 21px;\n    opacity: 60%;\n}\n\n#github {\n    background: url(${C}) no-repeat center center;\n    background-size: contain; /* Ensure the image scales appropriately */\n    width: 30px; /* Set the desired width */\n    height: 30px; /* Set the desired height */\n    align-self: center;\n}\n/* deleteButton.addEventListener("click", function(){//could make it shorter but not now\n\n    deleteTodoBox(todo, box, project);\n}); */\n\n#palletBtn {\n    /* position: fixed; */\n    /* bottom: 20px; \n    right: 20px;  */\n    margin-top: 0px;\n    color: text; /* Example text color */\n    border: none; /* Remove default border */\n    padding: 10px 10px; /* Example padding */\n    cursor: pointer; /* Pointer cursor on hover */\n    border-radius: 10px; /* Rounded corners */\n    border: 1px solid var(--static7);\n}\n\n::-webkit-scrollbar {\nwidth: 8px;\nheight: 3px;\nbackground-color: rgba(131, 131, 131, 0.1);\n}\n::-webkit-scrollbar-thumb {\nbackground-color: rgba(129, 129, 129, 0.5);\n}\n\na {\n    width: 0px;\n    height: 0px;\n    margin-right: 30px;\n    padding: 7px 0px;\n}\n`,"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[':root {\n    --text-50: hsl(37, 31%, 95%);\n    --text-100: hsl(35, 33%, 90%);\n    --text-200: hsl(35, 33%, 80%);\n    --text-300: hsl(36, 33%, 70%);\n    --text-400: hsl(36, 33%, 60%);\n    --text-500: hsl(36, 33%, 50%);\n    --text-600: hsl(36, 33%, 40%);\n    --text-700: hsl(36, 33%, 30%);\n    --text-800: hsl(35, 33%, 20%);\n    --text-900: hsl(35, 33%, 10%);\n    --text-950: hsl(38, 31%, 5%);\n\n    --background-50: hsl(37, 52%, 95%);\n    --background-100: hsl(36, 49%, 90%);\n    --background-200: hsl(35, 50%, 80%);\n    --background-300: hsl(36, 50%, 70%);\n    --background-400: hsl(36, 50%, 60%);\n    --background-500: hsl(36, 50%, 50%);\n    --background-600: hsl(36, 50%, 40%);\n    --background-700: hsl(36, 50%, 30%);\n    --background-800: hsl(36, 51%, 20%);\n    --background-900: hsl(36, 49%, 10%);\n    --background-950: hsl(37, 52%, 5%);\n\n    --primary-50: hsl(39, 54%, 95%);\n    --primary-100: hsl(38, 53%, 90%);\n    --primary-200: hsl(36, 55%, 80%);\n    --primary-300: hsl(37, 54%, 70%);\n    --primary-400: hsl(37, 54%, 60%);\n    --primary-500: hsl(37, 54%, 50%);\n    --primary-600: hsl(37, 54%, 40%);\n    --primary-700: hsl(37, 54%, 30%);\n    --primary-800: hsl(36, 55%, 20%);\n    --primary-900: hsl(38, 53%, 10%);\n    --primary-950: hsl(34, 54%, 5%);\n\n    --secondary-50: hsl(38, 62%, 95%);\n    --secondary-100: hsl(37, 61%, 90%);\n    --secondary-200: hsl(37, 63%, 80%);\n    --secondary-300: hsl(37, 62%, 70%);\n    --secondary-400: hsl(37, 62%, 60%);\n    --secondary-500: hsl(37, 62%, 50%);\n    --secondary-600: hsl(37, 62%, 40%);\n    --secondary-700: hsl(37, 62%, 30%);\n    --secondary-800: hsl(37, 63%, 20%);\n    --secondary-900: hsl(37, 61%, 10%);\n    --secondary-950: hsl(38, 62%, 5%);\n\n    --accent-50: hsl(37, 69%, 95%);\n    --accent-100: hsl(37, 73%, 90%);\n    --accent-200: hsl(37, 71%, 80%);\n    --accent-300: hsl(37, 71%, 70%);\n    --accent-400: hsl(37, 71%, 60%);\n    --accent-500: hsl(37, 71%, 50%);\n    --accent-600: hsl(37, 71%, 40%);\n    --accent-700: hsl(37, 71%, 30%);\n    --accent-800: hsl(37, 71%, 20%);\n    --accent-900: hsl(37, 73%, 10%);\n    --accent-950: hsl(37, 69%, 5%);\n\n    --static: rgba(225, 225, 225, 0.5);\n    --static2: #0f0f0f;\n    --static3: rgb(255, 255, 255);\n    --static4: rgba(225, 225, 225, 0.2);\n    --static5: rgb(24, 172, 122);\n    --static6: rgba(0, 0, 0, 0.05);\n    --static7: rgba(0, 0, 0, 0.1);\n    --static8: rgba(0, 0, 0, 0.05);\n    --static9: rgba(0, 0, 0, 0.3);\n    --static10: rgba(225, 225, 225);\n    --static11: rgba(0, 0, 0, 0.03);\n    --static12: rgba(255, 255, 255, 0.8);\n    --static13: rgb(235, 235, 235);\n    --static14: rgba(0, 0, 0, 0.2);\n    --static15: rgba(255, 255, 255, 0.5);\n\n    --margin-lg: 0 12%;\n} \n\nbody{\n    background-color: var(--background-50);\n    font-family: Poppins;\n    margin: 0px;\n    /* margin: var(--margin-lg); */\n    gap: 20px;\n\n    display: grid;\n    grid-template-columns: 300px 1fr; \n    grid-template-rows: 4em 1fr;\n    grid-template-areas: \n        "header header header header"\n        "sidebar content content content"\n        "sidebar content content content";\n}\n\n#header {\n    grid-area: header;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 50px;\n    padding-right: 50px;\n    border-bottom: 1px solid var(--static7);\n    height: 65px;\n    /* position: fixed; */\n    /*top: 0;*/\n    /* width: 100%; */\n}\n\nh1#title {\n    font-weight: 600;\n}\n\n#rightGap {\n    display: flex;\n    gap: 30px; /* Optional: Add gap between the elements */\n}\n\n#sidebar {\n    grid-area: sidebar;\n    background-color: var(--static11);\n    padding: 16px;\n    height: 85vh;\n    width: 300;\n    /* min-width: max-content; */\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n    border-radius: 20px;\n    margin-left: 50px;\n}\n\n#activeTab {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: var(--secondary-100);\n    opacity: 100%;\n    text-align: center; /* Horizontally center the button */\n}\n\n#user {\n    font-size: 16px;\n    padding: 1em 2em;\n    cursor: pointer;\n    transition: background-color 0.3s ease; /* nice little detail */\n    opacity: 100%;\n    margin-bottom: 20px;\n    border-radius: 10px;\n}\n\n#user:hover {\n    background-color: var(--static11);\n}\n\n/* project tab element */\n.project {\n    /* display: block; */\n    font-size: 16px;\n    padding: 1em 0em 1em 2em;\n    cursor: pointer;\n    transition: background-color 0.3s ease; /* nice little detail */\n    opacity: 60%;\n    border-radius: 30px;\n}\n\n.project:hover {\n    background-color: var(--text-100);\n    opacity: 100%;\n}\n\n.content {\n    grid-area: content;\n    display: flex;\n    flex-wrap: wrap;\n    gap: 10px;\n}\n\nselect {\n    font-family: Poppins;\n    font-size: 0.9em;\n    margin-bottom: 14px;\n}\n\nselect#sort {\n    margin: 0px;\n}\n\n/* todo element */\n.box {\n    background-color: var(--secondary-100);\n    width: 350px;\n    height: 300px;\n    padding: 27px;\n    /* padding-top: 30px; */\n    position: relative; /* Ensure the plus sign is positioned relative to the .box element */\n    box-sizing: border-box;\n    min-width: 350px;\n    border-radius: 20px;\n    transition: background-color 0.3s ease;\n}\n\n.box.clickable:hover {\n    background-color: var(--secondary-200); /* Change background color with opacity */\n}\n\n.plus-sign {\n    /*Position the plus sign relative to the .box element*/\n    position: absolute; \n    /*Center vertically */\n    top: 0px;\n    /*Center horizontally */\n    left: 0px;\n    text-align: center;\n    vertical-align: middle;\n    line-height: 90px;   \n    line-height: 300px;\n    width: 350px;\n    height: 300px;\n    /* transform: translate(-50%, -50%); Center the plus sign precisely */\n    font-size: 24px; /* Adjust the size of the plus sign */\n    color: var(--accent-700); /* Set the color of the plus sign */\n    cursor: pointer; /* Change cursor to indicate it\'s clickable */\n    /* padding: 70px 200px; */\n}\n\nform {\n    margin: 10px 0px 0px 10px;\n}\n\nh2 {\n    margin-top: 16px;\n    margin-bottom: 16px;\n}\n\ninput {\n    background-color: rgba(0, 0, 0, 0);\n    border-top: none;\n    border-right: none;\n    border-left: none;\n    margin-bottom: 15px;\n    font-family: Poppins;\n}\n\ninput.projName {\n    width: 105px;\n}\n\ninput#planned, input#due {\n    margin-bottom: 19px;\n}\n\ninput#title, input#description {\n    width: 160px;\n}\n\ninput:focus {\n    outline: none;\n    border: none;\n}\n\ninput.project {\n    width: 20px;\n}\n\n#priority {\n    background-color: var(--primary-color);\n    border-radius: 10px;\n    border: 2px solid var(--static7);\n    padding-left: 4px;\n}\n\n#sortByDiv {\n    display: flex;\n}\n\n#sort {\n    margin-top: 0px;\n    border: none; /* Remove default border */\n    padding: 10px 10px; /* Example padding */\n    cursor: pointer; /* Pointer cursor on hover */\n    border-radius: 10px; /* Rounded corners */\n    border: 1px solid var(--static7);\n    background-color: rgba(0, 0, 0, 0);\n}\n\n#sort:focus {\n    border: 1px solid var(--static7);\n}\n\noption {\n    background-color: var(--background-50);\n    border: none;/*useless stuff lol*/\n    border-radius: 15px;\n    box-shadow: none;\n}\n\noption:focus {\n    background-color: #0f0f0f;\n    border-radius: 15px;\n    box-shadow: none;\n}\n\nbutton {\n    margin-top: 9px;\n    background-color: rgba(0, 0, 0, 0);\n    border-color: var(--secondary-color);\n    border-radius: 3px;\n}\n\nbutton:focus {\n    background-color: var(--primary-color);\n    border-color: var(--secondary-color);\n}\n\n/* Target the date picker icon specifically */\ninput[type="date"]::-webkit-calendar-picker-indicator {\n    background-color: var(--secondary-color); /* Set the background color of the date picker icon to transparent */\n    /* You can also set other properties like width, height, etc. to customize the appearance of the icon */\n\n}\n\n.deleteBtn {\n    position: absolute;\n    bottom: 25px;\n    right: 35px;\n}\n\ninput.projName {\n    margin: 0px;\n}\n\nbutton.addBtn { \n    margin: 0px;\n}\n\nbutton.addBtn, button#createBtn {\n    padding: 3.5px;\n}\n\n#deleteBtn {\n    margin: 0px;\n    background: url(\'./images/deleteButton.png\') no-repeat center center;\n    background-size: contain; /* Ensure the image scales appropriately */\n    width: 23.636px; /* Set the desired width */\n    height: 23.636px; /* Set the desired height */\n    border-width: 2px;\n    border-style: solid;\n    border-color: var(--primary-color);\n    border-radius: 15%;\n    margin-right: 21px;\n    opacity: 60%;\n}\n\n#github {\n    background: url(\'../dist/6fa18895f6e6c7772cab.svg\') no-repeat center center;\n    background-size: contain; /* Ensure the image scales appropriately */\n    width: 30px; /* Set the desired width */\n    height: 30px; /* Set the desired height */\n    align-self: center;\n}\n/* deleteButton.addEventListener("click", function(){//could make it shorter but not now\n\n    deleteTodoBox(todo, box, project);\n}); */\n\n#palletBtn {\n    /* position: fixed; */\n    /* bottom: 20px; \n    right: 20px;  */\n    margin-top: 0px;\n    color: text; /* Example text color */\n    border: none; /* Remove default border */\n    padding: 10px 10px; /* Example padding */\n    cursor: pointer; /* Pointer cursor on hover */\n    border-radius: 10px; /* Rounded corners */\n    border: 1px solid var(--static7);\n}\n\n::-webkit-scrollbar {\nwidth: 8px;\nheight: 3px;\nbackground-color: rgba(131, 131, 131, 0.1);\n}\n::-webkit-scrollbar-thumb {\nbackground-color: rgba(129, 129, 129, 0.5);\n}\n\na {\n    width: 0px;\n    height: 0px;\n    margin-right: 30px;\n    padding: 7px 0px;\n}\n'],sourceRoot:""}]);const u=d},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,A){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var a=0;a<this.length;a++){var c=this[a][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var s=[].concat(n[l]);o&&i[s[0]]||(void 0!==A&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=A),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),r&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=r):s[4]="".concat(r)),e.push(s))}},e}},417:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),A="/*# ".concat(r," */");return[e].concat([A]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var A={},i=[],a=0;a<n.length;a++){var c=n[a],l=o.base?c[0]+o.base:c[0],s=A[l]||0,d="".concat(l," ").concat(s);A[l]=s+1;var p=t(d),C={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(C);else{var u=r(C,o);o.byIndex=a,e.splice(a,0,{identifier:d,updater:u,references:1})}i.push(d)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var A=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<A.length;i++){var a=t(A[i]);e[a].references--}for(var c=o(n,r),l=0;l<A.length;l++){var s=t(A[l]);0===e[s].references&&(e[s].updater(),e.splice(s,1))}A=c}}},659:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var A=t.sourceMap;A&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(A))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},637:(n,e,t)=>{n.exports=t.p+"6fa18895f6e6c7772cab.svg"},31:(n,e,t)=>{n.exports=t.p+"458b7e3d2fd90475111f.png"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var A=e[o]={id:o,exports:{}};return n[o](A,A.exports,t),A.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&(!n||!/^http(s?):/.test(n));)n=o[r--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(72),e=t.n(n),o=t(825),r=t.n(o),A=t(659),i=t.n(A),a=t(56),c=t.n(a),l=t(540),s=t.n(l),d=t(113),p=t.n(d),C=t(208),u={};function h(){localStorage.setItem("projects",JSON.stringify(m.map((n=>{let e=new g(n.title,n.todos);return e.todos=e.todos.map((n=>new B(n.title))),e}))))}function g(n,e=[]){this.title=n,this.todos=e}u.styleTagTransform=p(),u.setAttributes=c(),u.insert=i().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=s(),e()(C.A,u),C.A&&C.A.locals&&C.A.locals;const m=[];function b(n){return m.find((e=>e.title===n))}function B(n,e,t,o,r){this.title=n,this.description=e,this.dueDate=t,this.priority=o,this.checklist=r}function x(n){console.log("handleSortChange called");const e=n.target.value;"date"===e?function(){console.log("sortByDate called");let n=b(document.querySelector("#activeTab").textContent);n&&(console.log("project exists"),n.todos.sort(((n,e)=>new Date(n.dueDate)-new Date(e.dueDate))),D(n))}():"priority"===e&&function(){console.log("sortByPriority called");let n=b(document.querySelector("#activeTab").textContent);n&&(console.log("project exists"),n.todos.sort(((n,e)=>I(e.priority)-I(n.priority))),D(n))}()}function I(n){switch(console.log("priorityValue called"),n){case"low":return 1;case"medium":return 2;case"high":return 3;default:return 0}}const f=document.querySelector("body"),y=document.createElement("div");function E(){const n=document.createElement("div");n.classList.add("box"),n.textContent="Click me to add todo";const e=document.createElement("div");return e.textContent="+",e.classList.add("plus-sign"),n.appendChild(e),{box:n,plusSign:e}}function k(n){n.textContent="",n.classList.remove("clickable"),function(n){let e=document.createElement("form"),t=document.createElement("label");t.setAttribute("for","title"),t.textContent="Todo:         ";let o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("id","title"),o.setAttribute("name","title"),o.setAttribute("required","");let r=document.createElement("label");r.setAttribute("for","description"),r.textContent="Description:    ";let A=document.createElement("input");A.setAttribute("type","text"),A.setAttribute("id","description"),A.setAttribute("name","description");let i=document.createElement("label");i.setAttribute("for","dueDate"),i.textContent="Due:        ";let a=document.createElement("input");a.setAttribute("type","date"),a.setAttribute("id","dueDate"),a.setAttribute("name","dueDate");let c=document.createElement("label");c.setAttribute("for","priority"),c.textContent="Priority: ";let l=document.createElement("select");l.setAttribute("id","priority"),l.setAttribute("name","priority");["Low","Medium","High"].forEach((n=>{let e=document.createElement("option");e.value=n.toLowerCase(),e.textContent=n,l.appendChild(e)}));let s=document.createElement("label");s.textContent="Status: ";let d=document.createElement("input");d.setAttribute("type","radio"),d.setAttribute("id","planned"),d.setAttribute("name","status"),d.setAttribute("value","planned");let p=document.createElement("label");p.setAttribute("for","planned"),p.textContent="Planned";let C=document.createElement("input");C.setAttribute("type","radio"),C.setAttribute("id","due"),C.setAttribute("name","status"),C.setAttribute("value","due");let u=document.createElement("label");u.setAttribute("for","due"),u.textContent="Due";let h=document.createElement("button");h.setAttribute("id","createBtn"),h.textContent="Create",h.setAttribute("type","submit"),h.addEventListener("click",(function(t){if(t.preventDefault(),""===o.value.trim())return void alert("Title is required!");const r=new B(o.value,A.value,a.value,l.value,d.checked?d.value:C.value);console.log(r),w(),e.remove();let i=document.querySelector("#activeTab").textContent;console.log(i);let c=b(i);console.log(c),v(n,r,c),function(n,e){const t=m.findIndex((n=>n.title===e));-1!==t?(m[t].todos.push(n),console.log("Todo pushed to project:",e)):console.log("Project not found:",e)}(r,i)})),e.appendChild(t),e.appendChild(o),e.appendChild(document.createElement("br")),e.appendChild(r),e.appendChild(A),e.appendChild(document.createElement("br")),e.appendChild(c),e.appendChild(l),e.appendChild(document.createElement("br")),e.appendChild(s),e.appendChild(d),e.appendChild(p),e.appendChild(C),e.appendChild(u),e.appendChild(document.createElement("br")),e.appendChild(i),e.appendChild(a),e.appendChild(document.createElement("br")),e.appendChild(h),n.appendChild(e)}(n)}function v(n,e,t){const o=document.createElement("h2");o.textContent=e.title;const r=document.createElement("p");r.textContent=`Description: ${e.description}`;const A=document.createElement("p");A.textContent=`Due Date: ${e.dueDate}`;const i=document.createElement("p");i.textContent=`Priority: ${e.priority}`;const a=document.createElement("p");"planned"===e.checklist?a.textContent="Status: Planned":"due"===e.checklist?a.textContent="Status: Due":a.textContent="Status: error";let c=document.createElement("button");c.setAttribute("class","deleteBtn"),c.textContent="Done",c.addEventListener("click",(function(){!function(n,e,t){console.log(typeof t),console.log("project:"+t);let o=t.todos.indexOf(n);-1!==o?t.todos.splice(o,1):console.log("Error while splicing todos array"),e.remove()}(e,n,t),h()})),n.appendChild(c),n.appendChild(o),n.appendChild(r),n.appendChild(i),n.appendChild(a),n.appendChild(A)}function w(){const{box:n,plusSign:e}=E();return n.classList.add("clickable"),e.addEventListener("click",(function(){k(n)})),y.appendChild(n),n}function j(){let n=document.getElementById("activeTab");if(n){n.removeAttribute("id");let e=document.querySelector("#deleteBtn");e&&e.remove()}}function S(n){n.setAttribute("id","activeTab");let e=document.createElement("button");e.setAttribute("id","deleteBtn"),function(n,e){n.addEventListener("click",(function(n){n.stopPropagation();let t=e.textContent.trim();confirm(`Are you sure you want to delete the project "${t}"?`)&&function(n,e){let t=b(n),o=m.indexOf(t);-1!==o?(m.splice(o,1),h()):console.log("Error while splicing todos array"),e.remove()}(t,e)}))}(e,n),n.appendChild(e)}function D(n){P(),n.title;let e=n.todos;for(let t of e){let e=w();e.textContent="",e.classList.remove("clickable"),v(e,t,n)}w(),console.log(e)}function P(){for(;y.firstChild;)y.removeChild(y.firstChild)}let T=["#222831","#393E46","#00ADB5","#EEEEEE"];function Y(n,e){document.querySelector(":root").style.setProperty(n,e)}function L(){Y("--primary-color",`${T[3]}`),Y("--secondary-color",`${T[2]}`),Y("--tertiary-color",`${T[1]}`),Y("--quaternary-color",`${T[0]}`)}(()=>{console.log("Called LoadBlankProject - Creating a blank project array...");let n=[];console.log("Pushing the title name of the project to the project array...");n.push({projectTitle:"Default Project"}),console.log(n)})(),function(){let n=document.createElement("div");n.setAttribute("id","header");let e=document.createElement("h1");e.setAttribute("id","title"),e.textContent="Awesome Todo App";let t=document.createElement("div");t.setAttribute("id","rightGap");let o=document.createElement("a");o.setAttribute("href","https://github.com/DrEpico/"),o.setAttribute("target","_blank");let r=document.createElement("div");r.setAttribute("id","github"),o.appendChild(r),t.appendChild(o);let A=document.createElement("div");A.setAttribute("id","sortByDiv");let i=document.createElement("label");i.setAttribute("for","sort"),i.textContent="";let a=document.createElement("select");a.setAttribute("id","sort"),a.setAttribute("name","sort");let c=document.createElement("button");c.textContent="Dark Mode",c.setAttribute("id","palletBtn"),c.addEventListener("click",L),["Priority","Date"].forEach((n=>{let e=document.createElement("option");e.value=n.toLowerCase(),e.textContent=n,a.appendChild(e)})),a.addEventListener("change",x),n.appendChild(e),A.appendChild(i),A.appendChild(a),t.appendChild(A),t.appendChild(c),n.appendChild(t),f.appendChild(n)}(),function(){let n=document.createElement("div");n.setAttribute("id","sidebar"),f.appendChild(n);let e=document.createElement("span");e.setAttribute("id","user"),n.appendChild(e),e.textContent="Super cool user";let t=document.createElement("span");t.setAttribute("class","project"),t.setAttribute("id","activeTab"),t.textContent="Daily",n.appendChild(t);let o=document.createElement("span");o.setAttribute("class","project"),o.textContent="New project",n.appendChild(o),document.getElementById("sidebar").addEventListener("click",(function(n){let e=n.target;if(e.classList.contains("project")){let n=e.textContent.trim();if("New project"===n)console.log(n),function(n){let e=n;e.textContent="";let t=document.createElement("input");t.setAttribute("type","text"),t.setAttribute("class","projName"),t.setAttribute("name","projName"),t.setAttribute("required","");let o=document.createElement("button");o.textContent="Confirm",o.setAttribute("class","addBtn"),e.appendChild(t),e.appendChild(o),o.addEventListener("click",(function(n){n.stopPropagation();let o=t.value.trim();o?(P(),w(),j(),e.textContent=o,S(e),function(){let n=document.querySelector("#sidebar"),e=document.createElement("span");e.setAttribute("class","project"),e.textContent="New project",n.appendChild(e)}(),function(n){const e=new g(n);m.push(e),console.log("New project created:",n),h()}(o)):alert("Project name cannot be empty.")}))}(e);else if(""===n);else if("Confirm"===n);else{console.log(n),j(),S(e);let t=b(n);t?(console.log(typeof t),console.log(t),function(n){n&&Array.isArray(n.todos)?(console.log("Project clicked:",n.title),n.todos.forEach((n=>{console.log("Title:",n.title),console.log("Description:",n.description),console.log("Due Date:",n.dueDate),console.log("Priority:",n.priority),console.log("Checklist:",n.checklist),console.log("------------------------------------------")}))):console.log("Invalid project or todos not found.")}(t),D(t)):console.log("Project not found")}}})),function(){let n=new g("Daily");m.push(n)}()}(),y.setAttribute("class","content"),f.appendChild(y),(()=>{const{box:n,plusSign:e}=E();n.classList.add("clickable"),e.addEventListener("click",(function(){k(n)})),y.appendChild(n)})(),h(),console.log(undefined)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,