(()=>{"use strict";var e={208:(e,t,n)=>{n.d(t,{A:()=>A});var o=n(354),r=n.n(o),i=n(314),a=n.n(i)()(r());a.push([e.id,'* {\n    color: aliceblue;\n}\n\nbody{\n    font-family: Poppins;\n    display: flex;\n    margin: 0px;\n}\n\n.background {\n    background-color: black;\n}\n\n.content {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 80px;\n    \n}\n\n.box {\n    width: calc(45% - 10px);\n    height: 300px;\n    border: 2px white solid;\n    margin: 10px;\n    padding: 20px;\n    /* padding-top: 30px; */\n    position: relative; /* Ensure the plus sign is positioned relative to the .box element */\n    margin-bottom: 20px; /* Adjust as needed */\n    box-sizing: border-box;\n    min-width: 350px;\n}\n\n.box.clickable:hover {\n    background-color: rgba(224, 224, 224, 0.5); /* Change background color with opacity */\n}\n\n.plus-sign {\n    position: absolute; /* Position the plus sign relative to the .box element */\n    top: 50%; /* Center vertically */\n    left: 50%; /* Center horizontally */\n    transform: translate(-50%, -50%); /* Center the plus sign precisely */\n    font-size: 24px; /* Adjust the size of the plus sign */\n    color: white; /* Set the color of the plus sign */\n    cursor: pointer; /* Change cursor to indicate it\'s clickable */\n    padding: 70px 200px;\n}\n\ninput {\n    background-color: rgba(0, 0, 0, 0);\n    border-top: rgba(0, 0, 0, 0);\n    border-right: rgba(0, 0, 0, 0);\n    border-left: rgba(0, 0, 0, 0);\n    margin-bottom: 15px;\n}\n\ninput:focus {\n    outline: none;\n    border: none;\n}\n\nselect {\n    margin-bottom: 19px;\n}\n\n#priority {\n    background-color: #000000;\n    margin-bottom: 19px;\n    border-radius: 0%;\n}\n\nbutton {\n    margin-top: 9px;\n    background-color: rgba(0, 0, 0, 0);\n    border-color: white;\n}\n\nbutton:focus {\n    background-color: rgba(0, 0, 0, 0);\n    border-color: white;\n}\n\n/* Target the date picker icon specifically */\ninput[type="date"]::-webkit-calendar-picker-indicator {\n    background-color: white; /* Set the background color of the date picker icon to transparent */\n    /* You can also set other properties like width, height, etc. to customize the appearance of the icon */\n}\n\n#title {\n    margin-top: 20px;\n    margin-left: 35px;\n    margin: 20px 35px 20px 35px;\n    border-bottom: rgba(0, 0, 0, 0);\n}\n\n.deleteBtn {\n    position: absolute;\n    bottom: 25px;\n    right: 35px;\n}\n\n#sidebar {\n    min-width: 250px;\n    border-color: white;\n    border-width: 1px;\n    border-style: solid;\n    background-color: rgba(0, 0, 0, 0);\n    border-top: rgba(0, 0, 0, 0);\n    border-left: rgba(0, 0, 0, 0);\n    border-bottom: rgba(0, 0, 0, 0);\n    padding: 0px 0px 35px 0px;\n    margin-right: 20px;\n    height: 100vh;\n}\n\n.project {\n    display: block;\n    color: #333;\n    font-size: 16px;\n    color: white;\n    border-width: 1px;\n    border-style: solid;\n    border-color: white;\n    padding: 10px 0px 10px 35px;\n    border-right: rgba(0, 0, 0, 0);\n    border-left: rgba(0, 0, 0, 0);\n}\n\n.project:hover {\n    background-color: rgb(68, 68, 68);\n}\n\n\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,gBAAgB;AACpB;;AAEA;IACI,oBAAoB;IACpB,aAAa;IACb,WAAW;AACf;;AAEA;IACI,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,eAAe;IACf,gBAAgB;;AAEpB;;AAEA;IACI,uBAAuB;IACvB,aAAa;IACb,uBAAuB;IACvB,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,kBAAkB,EAAE,oEAAoE;IACxF,mBAAmB,EAAE,qBAAqB;IAC1C,sBAAsB;IACtB,gBAAgB;AACpB;;AAEA;IACI,0CAA0C,EAAE,yCAAyC;AACzF;;AAEA;IACI,kBAAkB,EAAE,wDAAwD;IAC5E,QAAQ,EAAE,sBAAsB;IAChC,SAAS,EAAE,wBAAwB;IACnC,gCAAgC,EAAE,mCAAmC;IACrE,eAAe,EAAE,qCAAqC;IACtD,YAAY,EAAE,mCAAmC;IACjD,eAAe,EAAE,6CAA6C;IAC9D,mBAAmB;AACvB;;AAEA;IACI,kCAAkC;IAClC,4BAA4B;IAC5B,8BAA8B;IAC9B,6BAA6B;IAC7B,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,YAAY;AAChB;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,yBAAyB;IACzB,mBAAmB;IACnB,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,kCAAkC;IAClC,mBAAmB;AACvB;;AAEA;IACI,kCAAkC;IAClC,mBAAmB;AACvB;;AAEA,6CAA6C;AAC7C;IACI,uBAAuB,EAAE,oEAAoE;IAC7F,uGAAuG;AAC3G;;AAEA;IACI,gBAAgB;IAChB,iBAAiB;IACjB,2BAA2B;IAC3B,+BAA+B;AACnC;;AAEA;IACI,kBAAkB;IAClB,YAAY;IACZ,WAAW;AACf;;AAEA;IACI,gBAAgB;IAChB,mBAAmB;IACnB,iBAAiB;IACjB,mBAAmB;IACnB,kCAAkC;IAClC,4BAA4B;IAC5B,6BAA6B;IAC7B,+BAA+B;IAC/B,yBAAyB;IACzB,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,cAAc;IACd,WAAW;IACX,eAAe;IACf,YAAY;IACZ,iBAAiB;IACjB,mBAAmB;IACnB,mBAAmB;IACnB,2BAA2B;IAC3B,8BAA8B;IAC9B,6BAA6B;AACjC;;AAEA;IACI,iCAAiC;AACrC",sourcesContent:['* {\n    color: aliceblue;\n}\n\nbody{\n    font-family: Poppins;\n    display: flex;\n    margin: 0px;\n}\n\n.background {\n    background-color: black;\n}\n\n.content {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 80px;\n    \n}\n\n.box {\n    width: calc(45% - 10px);\n    height: 300px;\n    border: 2px white solid;\n    margin: 10px;\n    padding: 20px;\n    /* padding-top: 30px; */\n    position: relative; /* Ensure the plus sign is positioned relative to the .box element */\n    margin-bottom: 20px; /* Adjust as needed */\n    box-sizing: border-box;\n    min-width: 350px;\n}\n\n.box.clickable:hover {\n    background-color: rgba(224, 224, 224, 0.5); /* Change background color with opacity */\n}\n\n.plus-sign {\n    position: absolute; /* Position the plus sign relative to the .box element */\n    top: 50%; /* Center vertically */\n    left: 50%; /* Center horizontally */\n    transform: translate(-50%, -50%); /* Center the plus sign precisely */\n    font-size: 24px; /* Adjust the size of the plus sign */\n    color: white; /* Set the color of the plus sign */\n    cursor: pointer; /* Change cursor to indicate it\'s clickable */\n    padding: 70px 200px;\n}\n\ninput {\n    background-color: rgba(0, 0, 0, 0);\n    border-top: rgba(0, 0, 0, 0);\n    border-right: rgba(0, 0, 0, 0);\n    border-left: rgba(0, 0, 0, 0);\n    margin-bottom: 15px;\n}\n\ninput:focus {\n    outline: none;\n    border: none;\n}\n\nselect {\n    margin-bottom: 19px;\n}\n\n#priority {\n    background-color: #000000;\n    margin-bottom: 19px;\n    border-radius: 0%;\n}\n\nbutton {\n    margin-top: 9px;\n    background-color: rgba(0, 0, 0, 0);\n    border-color: white;\n}\n\nbutton:focus {\n    background-color: rgba(0, 0, 0, 0);\n    border-color: white;\n}\n\n/* Target the date picker icon specifically */\ninput[type="date"]::-webkit-calendar-picker-indicator {\n    background-color: white; /* Set the background color of the date picker icon to transparent */\n    /* You can also set other properties like width, height, etc. to customize the appearance of the icon */\n}\n\n#title {\n    margin-top: 20px;\n    margin-left: 35px;\n    margin: 20px 35px 20px 35px;\n    border-bottom: rgba(0, 0, 0, 0);\n}\n\n.deleteBtn {\n    position: absolute;\n    bottom: 25px;\n    right: 35px;\n}\n\n#sidebar {\n    min-width: 250px;\n    border-color: white;\n    border-width: 1px;\n    border-style: solid;\n    background-color: rgba(0, 0, 0, 0);\n    border-top: rgba(0, 0, 0, 0);\n    border-left: rgba(0, 0, 0, 0);\n    border-bottom: rgba(0, 0, 0, 0);\n    padding: 0px 0px 35px 0px;\n    margin-right: 20px;\n    height: 100vh;\n}\n\n.project {\n    display: block;\n    color: #333;\n    font-size: 16px;\n    color: white;\n    border-width: 1px;\n    border-style: solid;\n    border-color: white;\n    padding: 10px 0px 10px 35px;\n    border-right: rgba(0, 0, 0, 0);\n    border-left: rgba(0, 0, 0, 0);\n}\n\n.project:hover {\n    background-color: rgb(68, 68, 68);\n}\n\n\n'],sourceRoot:""}]);const A=a},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",o=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),o&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),o&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,o,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);o&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),t.push(d))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(r," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,o=0;o<t.length;o++)if(t[o].identifier===e){n=o;break}return n}function o(e,o){for(var i={},a=[],A=0;A<e.length;A++){var c=e[A],l=o.base?c[0]+o.base:c[0],d=i[l]||0,p="".concat(l," ").concat(d);i[l]=d+1;var s=n(p),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==s)t[s].references++,t[s].updater(u);else{var b=r(u,o);o.byIndex=A,t.splice(A,0,{identifier:p,updater:b,references:1})}a.push(p)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var i=o(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var A=n(i[a]);t[A].references--}for(var c=o(e,r),l=0;l<i.length;l++){var d=n(i[l]);0===t[d].references&&(t[d].updater(),t.splice(d,1))}i=c}}},659:e=>{var t={};e.exports=function(e,n){var o=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var o="";n.supports&&(o+="@supports (".concat(n.supports,") {")),n.media&&(o+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(o+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),o+=n.css,r&&(o+="}"),n.media&&(o+="}"),n.supports&&(o+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,n),i.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(72),t=n.n(e),o=n(825),r=n.n(o),i=n(659),a=n.n(i),A=n(56),c=n.n(A),l=n(540),d=n.n(l),p=n(113),s=n.n(p),u=n(208),b={};function C(e,t,n,o,r){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.checklist=r}b.styleTagTransform=s(),b.setAttributes=c(),b.insert=a().bind(null,"head"),b.domAPI=r(),b.insertStyleElement=d(),t()(u.A,b),u.A&&u.A.locals&&u.A.locals;let m=[];function h(){let e=new C;return m.push(e),console.log(e),e}const g=document.querySelector("body"),f=document.querySelector(".content");function x(){const e=document.createElement("div");e.classList.add("box"),e.textContent="Click me to add todo";const t=document.createElement("div");return t.textContent="+",t.classList.add("plus-sign"),e.appendChild(t),{box:e,plusSign:t}}function B(e,t){e.textContent="",e.classList.remove("clickable"),function(e){let t=document.createElement("form"),n=document.createElement("label");n.setAttribute("for","title"),n.textContent="Todo:         ";let o=document.createElement("input");o.setAttribute("type","text"),o.setAttribute("id","title"),o.setAttribute("name","title"),o.setAttribute("required","");let r=document.createElement("label");r.setAttribute("for","description"),r.textContent="Description:    ";let i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("id","description"),i.setAttribute("name","description");let a=document.createElement("label");a.setAttribute("for","dueDate"),a.textContent="Due:        ";let A=document.createElement("input");A.setAttribute("type","date"),A.setAttribute("id","dueDate"),A.setAttribute("name","dueDate");let c=document.createElement("label");c.setAttribute("for","priority"),c.textContent="Priority: ";let l=document.createElement("select");l.setAttribute("id","priority"),l.setAttribute("name","priority");["Low","Medium","High"].forEach((e=>{let t=document.createElement("option");t.value=e.toLowerCase(),t.textContent=e,l.appendChild(t)}));let d=document.createElement("label");d.textContent="Status: ";let p=document.createElement("input");p.setAttribute("type","radio"),p.setAttribute("id","planned"),p.setAttribute("name","status"),p.setAttribute("value","planned");let s=document.createElement("label");s.setAttribute("for","planned"),s.textContent="Planned";let u=document.createElement("input");u.setAttribute("type","radio"),u.setAttribute("id","due"),u.setAttribute("name","status"),u.setAttribute("value","due");let b=document.createElement("label");b.setAttribute("for","due"),b.textContent="Due";let g=document.createElement("button");g.setAttribute("id","createBtn"),g.textContent="Create",g.setAttribute("type","submit"),g.addEventListener("click",(function(n){if(n.preventDefault(),""===o.value.trim())return void alert("Title is required!");const r=new C(o.value,i.value,A.value,l.value,p.checked?p.value:u.value);console.log(r),function(){const{box:e,plusSign:t}=x();e.classList.add("clickable"),t.addEventListener("click",(function(){B(e,h())})),f.appendChild(e)}(),t.remove(),function(e,t){const n=document.createElement("h2");n.textContent=t.title;const o=document.createElement("p");o.textContent=`Description: ${t.description}`;const r=document.createElement("p");r.textContent=`Due Date: ${t.dueDate}`;const i=document.createElement("p");i.textContent=`Priority: ${t.priority}`;const a=document.createElement("p");"planned"===t.checklist?a.textContent="Status: Planned":"due"===t.checklist?a.textContent="Status: Due":a.textContent="Status: error";let A=document.createElement("button");A.setAttribute("class","deleteBtn"),A.textContent="Done",A.addEventListener("click",(function(){!function(e,t){let n=m.indexOf(e);-1!==n&&projects.splice(n,1),t.remove()}(t,e)})),e.appendChild(A),e.appendChild(n),e.appendChild(o),e.appendChild(r),e.appendChild(i),e.appendChild(a)}(e,r)})),t.appendChild(n),t.appendChild(o),t.appendChild(document.createElement("br")),t.appendChild(r),t.appendChild(i),t.appendChild(document.createElement("br")),t.appendChild(c),t.appendChild(l),t.appendChild(document.createElement("br")),t.appendChild(d),t.appendChild(p),t.appendChild(s),t.appendChild(u),t.appendChild(b),t.appendChild(document.createElement("br")),t.appendChild(a),t.appendChild(A),t.appendChild(document.createElement("br")),t.appendChild(g),e.appendChild(t)}(e)}(()=>{console.log("Called LoadBlankProject - Creating a blank project array...");let e=[];console.log("Pushing the title name of the project to the project array...");e.push({projectTitle:"Default Project"}),console.log(e)})(),function(){let e=document.createElement("div");e.setAttribute("id","sidebar"),g.insertBefore(e,f);let t=document.createElement("h1");t.setAttribute("id","title"),e.appendChild(t),t.textContent="Todo list app";let n=document.createElement("span");n.setAttribute("class","project"),n.textContent="Daily",e.appendChild(n);let o=document.createElement("span");o.setAttribute("class","project"),o.textContent="New project",e.appendChild(o)}(),(()=>{const{box:e,plusSign:t}=x();e.classList.add("clickable"),t.addEventListener("click",(function(){B(e,h())})),f.appendChild(e)})(),console.log(m)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,